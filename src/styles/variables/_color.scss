@use "sass:color";
@use "sass:map";
@use "sass:math";

$opacity: 0.2 !default;

@mixin define-variables($name, $color) {
  $r: red($color);
  $g: green($color);
  $b: blue($color);
  --#{$name}-color: #{$color};
  --#{$name}-r-color: #{$r};
  --#{$name}-g-color: #{$g};
  --#{$name}-b-color: #{$b};
  --#{$name}-rgb-color: #{$r, $g, $b};
}

@function get-lightness($class) {
  $interval: 20%;
  $base: 5;

  @return ($base - (math.div($class, 100))) * $interval;
}

@mixin generate-classes($name, $base-color) {
  @for $i from 1 through 9 {
    @include define-variables(
      "#{$name}-#{$i * 100}",
      color.scale($base-color, $lightness: get-lightness($i * 100))
    );
  }
}

@function class-color($name, $class) {
  @return color.scale(
    map.get($basics, $name),
    $lightness: get-lightness($class)
  );
}

$basics: (
  "red": red,
  "orange": orange,
  "yellow": yellow,
  "green": green,
  "springgreen": springgreen,
  "cyan": cyan,
  "royalblue": royalblue,
  "blue": blue,
  "violet": violet,
  "purple": purple,
  "magenta": magenta,
  "crimson": crimson,
  "gray": gray,
);

// twitter

$twitter-blue: #1da1f2;
$twitter-black: #14171a;
$twitter-dark-gray: #657786;
$twitter-light-gray: #aab8c2;

@mixin define() {
  :root {
    @each $name, $color in $basics {
      @include generate-classes($name, $color);
    }

    // twitter
    @include define-variables("twitter-blue", $twitter-blue);
    @include define-variables("twitter-black", $twitter-black);
    @include define-variables("twitter-dark-gray", $twitter-dark-gray);
    @include define-variables("twitter-light-gray", $twitter-light-gray);
  }
}
